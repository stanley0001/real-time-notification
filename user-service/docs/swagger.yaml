basePath: /
definitions:
  models.CreateUserResponse:
    properties:
      status:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      name:
        description: gorm.Model
        type: string
      password:
        type: string
      phone:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: This service manages user accounts and profiles.
  title: User Service API
  version: "1.0"
paths:
  /users:
    get:
      description: Get user details by id, username, or email
      parameters:
      - description: User ID
        in: query
        name: id
        type: string
      - description: User Username
        in: query
        name: username
        type: string
      - description: User Email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a user
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a user
      tags:
      - users
swagger: "2.0"
